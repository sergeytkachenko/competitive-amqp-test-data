<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>App</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.dev.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"></script>
    <style>
        .main {
            display: flex;
        }

        .main > div {
            flex: 1;
        }

        .workers div {
            padding: 20px;
        }

        .color {
            padding: 5px 30px;
            margin-left: 20px;
            transition: background-color 100ms linear;
        }
    </style>
</head>
<body>
    <div class="main">
        <div style="flex: 2">
            <canvas id="canvas1"></canvas>
        </div>
        <div class="workers" style="flex: 1">
            <div id="worker1">
                <span>worker1</span>
                <span class="color"></span>
            </div>
            <div id="worker2">
                <span>worker2</span>
                <span class="color"></span>
            </div>
            <div id="worker3">
                <span>worker3</span>
                <span class="color"></span>
            </div>
        </div>
    </div>
    <script>
        const tasks = {red: 0, green: 0, blue: 0, yellow: 0, magenta: 0};
        function getData() {
          return [tasks.red, tasks.green, tasks.blue, tasks.yellow, tasks.magenta];
        };
        const lineChartData = {
            labels: ['red (2K)', 'green (800)', 'blue (1300)', 'yellow (500)', 'magenta (600)'],
            datasets: [{
                label: 'Dataset 1',
                fill: false,
                backgroundColor: ['red', 'green', 'blue', 'yellow', 'magenta'],
                data: getData(),
            }]
        };

        window.onload = function() {
            const ctx = document.getElementById('canvas1').getContext('2d');
            window.chart = new Chart(ctx, {
                type: 'pie',
                data: lineChartData,
                options: {
                    showAllTooltips: true,
                    tooltips: {
                        mode: 'point'
                    },
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'amqp consume tasks'
                    }
                }
            });
            const socket = io.connect( 'http://127.0.0.1:3000', {
                reconnection: true,
                reconnectionDelay: 1000,
                reconnectionDelayMax : 5000,
                reconnectionAttempts: 99999
            } );
            socket.on('outbox', function(msg){
                tasks[msg.queue]++;
                window.chart.data.datasets.forEach((dataset) => {
                    dataset.data = getData();
                });
                window.requestAnimationFrame(() => {
                    window.chart.update();
                });
            });
            socket.on('worker-color', function(msg){
                const color = msg.queue;
                const worker = msg.worker;
                window.requestAnimationFrame(() => {
                    const colorEl = document.querySelector(`#worker${worker} .color`);
                    colorEl.setAttribute("style", `background-color: ${color};`);
                });
            });
        };
    </script>
</body>
</html>
